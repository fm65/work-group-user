pipeline{
agent any

    stages {
        stage('Inter git project') {
            steps {
                    /usr/bin/git branch: 'master', url: 'https://github.com/fm65/work-group-user.git'
            }
        }

        stage('Install requirements') {
            steps {
                sh 'pip install -r requirements.txt'
            }
        }

        stage('base_test') {
            steps {
                sh 'python -m unittest discover -v tests/base_test'
            }
        }

        stage('test_forms') {
            steps {
                sh 'python -m unittest discover -v tests/test_forms'
            }
        }
        stage('base_models') {
            steps {
                sh 'python -m unittest discover -v tests/base_models'
            }
        }

        stage('test_routes') {
            steps {
                sh 'python -m unittest discover -v tests/test_routes'
            }
        }



        stage('Code analysis') {
            steps {
                sh 'pylint --output-format=html app.py > pylint_report.html'
            }
        }


        // Il fqut identifier le main.py 
        // stage('Build') {
        //     steps {
        //         sh 'python main.py sdist bdist_wheel'
        //     }
        // }

        stage('Publish reports') {
            steps {
                publishHTML(target: [
                    allowMissing: false,
                    alwaysLinkToLastBuild: false,
                    keepAll: true,
                    reportDir: '.',
                    reportFiles: 'pylint_report.html',
                    reportName: 'PyLint Report'
                ])
            }
        }

        stage('Archive artifacts') {
            steps {
                archiveArtifacts artifacts: '*/.{whl, tar.gz}', fingerprint: true
            }
        }
    }
}
